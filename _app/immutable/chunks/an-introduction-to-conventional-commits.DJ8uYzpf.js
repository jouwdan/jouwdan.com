import{s as Ke,n as ve}from"./scheduler.DGZYho1L.js";import{S as Qe,i as Xe,e as a,s as o,H as L,a as i,g as m,d as s,b as S,w as z,h as t,j as D,k as n}from"./index.BCys4dKQ.js";function Ze(Ue){let u,xe='As a student, i’ve always wondered if there is a standard around commit messages. I thought it would make sense for them to be standardised, and when I started my new role I learned about <a href="https://www.conventionalcommits.org/en/v1.0.0/" rel="nofollow">Conventional Commits</a> - and it just makes sense! I see a lot of people don’t follow any rules and, when it comes to working with a team, without standardisation the commit log can become quite chaotic and uninformative.',G,d,Ce='Conventional Commits is a specification for adding human and machine-readable meaning to commit messages. It is a lightweight convention on top of commit messages that provides an easy set of rules to help you create an explicit commit history, making it easier to write automated tools on top of. This convention dovetails with <a href="https://semver.org/" rel="nofollow">SemVer</a>, by describing the features, fixes, and breaking changes made in commit messages.',V,f,_e="Conventional Commits have the following structure:",B,c,U,Ne=`<code class="language-undefined">&lt;type&gt;[optional scope]: &lt;description&gt;

[optional body]

[optional footer(s)]</code>`,N,p,we="With Conventional Commits, there are multiple types of commit you can make.",O,r,ge="<li><code>feat:</code> Add a new feature to the codebase (MINOR in semantic versioning).</li> <li><code>fix:</code> Fix a bug (equivalent to a PATCH in Semantic Versioning).</li> <li><code>docs:</code> Documentation changes.</li> <li><code>style:</code> Code style change (semicolon, indentation…).</li> <li><code>refactor:</code> Refactor code without changing public API.</li> <li><code>perf:</code> Update code performances.</li> <li><code>test:</code> Add test to an existing feature.</li> <li><code>chore:</code> Update something without impacting the user (ex: bump a dependency in package.json).</li>",W,h,be="Examples",F,v,ye="Some examples of the above would be",Y,x,He="Commit with no body",J,C,K,Oe='<code class="language-undefined">feat: allow provided config object to extend other configs</code>',Q,_,X,We='<code class="language-undefined">docs: correct spelling of CHANGELOG</code>',Z,w,ke="Commit with ! to draw attention to breaking change",$,g,ee,Fe='<code class="language-undefined">feat!: send an email to the customer when a product is shipped</code>',te,b,Pe="Commit with scope and ! to draw attention to breaking change",le,y,ne,Ye='<code class="language-undefined">feat(api)!: send an email to the customer when a product is shipped</code>',ae,H,Ee="Commit with multi-paragraph body and footer",ie,k,oe,Je=`<code class="language-undefined">fix: prevent racing of requests

Introduce a request id and a reference to latest request. Dismiss
incoming responses other than from latest request.

Remove timeouts which were used to mitigate the racing issue but are
obsolete now.

Story-ref: #1234</code>`,se,P,Ae="Benefits",me,E,Re="Readability",ue,A,qe="Commits are more descriptive, making it easier for teammates and stakeholders to read and understand them. It also makes it easier to contribute.",de,R,Ie="Changelog",fe,q,Me="Allows you to automatically generate a changelog.",ce,I,Te="Version Control",pe,M,je="Helps to automatically determine a semantic version bump based on the types of commits landed.",re,T,Le="Revert changes",he,j,Se="If only one action is made per commit, it makes it simpler to revert a change or git conflict";return{c(){u=a("p"),u.innerHTML=xe,G=o(),d=a("p"),d.innerHTML=Ce,V=o(),f=a("p"),f.textContent=_e,B=o(),c=a("pre"),U=new L(!1),N=o(),p=a("p"),p.textContent=we,O=o(),r=a("ul"),r.innerHTML=ge,W=o(),h=a("h2"),h.textContent=be,F=o(),v=a("p"),v.textContent=ye,Y=o(),x=a("h4"),x.textContent=He,J=o(),C=a("pre"),K=new L(!1),Q=o(),_=a("pre"),X=new L(!1),Z=o(),w=a("h4"),w.textContent=ke,$=o(),g=a("pre"),ee=new L(!1),te=o(),b=a("h4"),b.textContent=Pe,le=o(),y=a("pre"),ne=new L(!1),ae=o(),H=a("h4"),H.textContent=Ee,ie=o(),k=a("pre"),oe=new L(!1),se=o(),P=a("h2"),P.textContent=Ae,me=o(),E=a("h4"),E.textContent=Re,ue=o(),A=a("p"),A.textContent=qe,de=o(),R=a("h4"),R.textContent=Ie,fe=o(),q=a("p"),q.textContent=Me,ce=o(),I=a("h4"),I.textContent=Te,pe=o(),M=a("p"),M.textContent=je,re=o(),T=a("h4"),T.textContent=Le,he=o(),j=a("p"),j.textContent=Se,this.h()},l(e){u=i(e,"P",{"data-svelte-h":!0}),m(u)!=="svelte-9flbha"&&(u.innerHTML=xe),G=s(e),d=i(e,"P",{"data-svelte-h":!0}),m(d)!=="svelte-os6xuf"&&(d.innerHTML=Ce),V=s(e),f=i(e,"P",{"data-svelte-h":!0}),m(f)!=="svelte-10nopnl"&&(f.textContent=_e),B=s(e),c=i(e,"PRE",{class:!0});var l=S(c);U=z(l,!1),l.forEach(t),N=s(e),p=i(e,"P",{"data-svelte-h":!0}),m(p)!=="svelte-12i8zd6"&&(p.textContent=we),O=s(e),r=i(e,"UL",{"data-svelte-h":!0}),m(r)!=="svelte-1iunmxg"&&(r.innerHTML=ge),W=s(e),h=i(e,"H2",{"data-svelte-h":!0}),m(h)!=="svelte-1978del"&&(h.textContent=be),F=s(e),v=i(e,"P",{"data-svelte-h":!0}),m(v)!=="svelte-7blgyo"&&(v.textContent=ye),Y=s(e),x=i(e,"H4",{"data-svelte-h":!0}),m(x)!=="svelte-j7lnnk"&&(x.textContent=He),J=s(e),C=i(e,"PRE",{class:!0});var ze=S(C);K=z(ze,!1),ze.forEach(t),Q=s(e),_=i(e,"PRE",{class:!0});var De=S(_);X=z(De,!1),De.forEach(t),Z=s(e),w=i(e,"H4",{"data-svelte-h":!0}),m(w)!=="svelte-5abkv1"&&(w.textContent=ke),$=s(e),g=i(e,"PRE",{class:!0});var Ge=S(g);ee=z(Ge,!1),Ge.forEach(t),te=s(e),b=i(e,"H4",{"data-svelte-h":!0}),m(b)!=="svelte-3znq7i"&&(b.textContent=Pe),le=s(e),y=i(e,"PRE",{class:!0});var Ve=S(y);ne=z(Ve,!1),Ve.forEach(t),ae=s(e),H=i(e,"H4",{"data-svelte-h":!0}),m(H)!=="svelte-1sm7izl"&&(H.textContent=Ee),ie=s(e),k=i(e,"PRE",{class:!0});var Be=S(k);oe=z(Be,!1),Be.forEach(t),se=s(e),P=i(e,"H2",{"data-svelte-h":!0}),m(P)!=="svelte-17zru5y"&&(P.textContent=Ae),me=s(e),E=i(e,"H4",{"data-svelte-h":!0}),m(E)!=="svelte-1sj5a1k"&&(E.textContent=Re),ue=s(e),A=i(e,"P",{"data-svelte-h":!0}),m(A)!=="svelte-n92qtp"&&(A.textContent=qe),de=s(e),R=i(e,"H4",{"data-svelte-h":!0}),m(R)!=="svelte-dujwmo"&&(R.textContent=Ie),fe=s(e),q=i(e,"P",{"data-svelte-h":!0}),m(q)!=="svelte-8rfvyb"&&(q.textContent=Me),ce=s(e),I=i(e,"H4",{"data-svelte-h":!0}),m(I)!=="svelte-1c2rko5"&&(I.textContent=Te),pe=s(e),M=i(e,"P",{"data-svelte-h":!0}),m(M)!=="svelte-1gap1u3"&&(M.textContent=je),re=s(e),T=i(e,"H4",{"data-svelte-h":!0}),m(T)!=="svelte-12w37zd"&&(T.textContent=Le),he=s(e),j=i(e,"P",{"data-svelte-h":!0}),m(j)!=="svelte-1lxmlpo"&&(j.textContent=Se),this.h()},h(){U.a=null,D(c,"class","language-undefined"),K.a=null,D(C,"class","language-undefined"),X.a=null,D(_,"class","language-undefined"),ee.a=null,D(g,"class","language-undefined"),ne.a=null,D(y,"class","language-undefined"),oe.a=null,D(k,"class","language-undefined")},m(e,l){n(e,u,l),n(e,G,l),n(e,d,l),n(e,V,l),n(e,f,l),n(e,B,l),n(e,c,l),U.m(Ne,c),n(e,N,l),n(e,p,l),n(e,O,l),n(e,r,l),n(e,W,l),n(e,h,l),n(e,F,l),n(e,v,l),n(e,Y,l),n(e,x,l),n(e,J,l),n(e,C,l),K.m(Oe,C),n(e,Q,l),n(e,_,l),X.m(We,_),n(e,Z,l),n(e,w,l),n(e,$,l),n(e,g,l),ee.m(Fe,g),n(e,te,l),n(e,b,l),n(e,le,l),n(e,y,l),ne.m(Ye,y),n(e,ae,l),n(e,H,l),n(e,ie,l),n(e,k,l),oe.m(Je,k),n(e,se,l),n(e,P,l),n(e,me,l),n(e,E,l),n(e,ue,l),n(e,A,l),n(e,de,l),n(e,R,l),n(e,fe,l),n(e,q,l),n(e,ce,l),n(e,I,l),n(e,pe,l),n(e,M,l),n(e,re,l),n(e,T,l),n(e,he,l),n(e,j,l)},p:ve,i:ve,o:ve,d(e){e&&(t(u),t(G),t(d),t(V),t(f),t(B),t(c),t(N),t(p),t(O),t(r),t(W),t(h),t(F),t(v),t(Y),t(x),t(J),t(C),t(Q),t(_),t(Z),t(w),t($),t(g),t(te),t(b),t(le),t(y),t(ae),t(H),t(ie),t(k),t(se),t(P),t(me),t(E),t(ue),t(A),t(de),t(R),t(fe),t(q),t(ce),t(I),t(pe),t(M),t(re),t(T),t(he),t(j))}}}const tt={title:"An introduction to Conventional Commits",date:"Aug 7, 2022",cover:"https://images.unsplash.com/photo-1556075798-4825dfaaf498?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1476&q=80",excerpt:"Conventional Commits is a specification for adding human and machine-readable meaning to commit messages."};class lt extends Qe{constructor(u){super(),Xe(this,u,null,Ze,Ke,{})}}export{lt as default,tt as metadata};
